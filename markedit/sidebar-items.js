initSidebarItems({"fn":[["between","Gets all [`Event`]s between (inclusive) two matchers."],["change_text","A [`Rewriter`] which lets you update a [`Event::Text`] node based on some predicate."],["exact_text","Match an [`Event::Text`] event with this exact text."],["insert_before","Splice some events into the resulting event stream before every match."],["insert_markdown_before","Inserts some markdown text before whatever is matched by the [`Matcher`]."],["link_with_url_containing","Matches the start of a link who's URL contains a certain string."],["match_indices","Get an iterator over the indices of matching events."],["parse","A convenience function for parsing some text into [`Event`]s without needing to add [`pulldown_cmark`] as an explicit dependency."],["rewrite","The whole point."],["text","Match a [`Event::Text`] node using an arbitrary predicate."],["text_containing","Match an [`Event::Text`] event which contains the provided string."]],"struct":[["Always","A [`Matcher`] which matches everything."],["And","A [`Matcher`] which only returns `true` when both inner [`Matcher`]s do."],["FallingEdge","A [`Matcher`] which will detect the falling edge of another."],["Heading","Matches the items inside a heading tag, including the start and end tags."],["OneShot","A [`Matcher`] which will only ever return `true` once."],["Rewritten","A stream of [`Event`]s that have been modified by a [`Rewriter`]."],["StartOfNextLine","A [`Matcher`] which will match the start of the next top-level element after some inner [`Matcher`] matches."],["Writer","The output buffer given to [`Rewriter::rewrite_event()`]."]],"trait":[["Matcher","A predicate which can be fed a stream of [`Event`]s and tell you whether they match a desired condition."],["Rewriter","Something which can rewrite events."]]});